global:
  ipsVersion: IPS-1.13.0
  cxVersion: CXS-6.3.0
  identityVersion: IDENTITY-1.7.3
  env:
    "EUREKA_CLIENT_ENABLED": "false"
    "SPRING_CLOUD_KUBERNETES_ENABLED": "true"
    "SPRING_CLOUD_KUBERNETES_RELOAD_ENABLED": "true"
    "SPRING_CLOUD_KUBERNETES_RIBBON_MODE": "SERVICE"
    "spring.cloud.loadbalancer.ribbon.enabled": "false"
    "spring.autoconfigure.exclude": "org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration"
    # Enabling RBAC roles creation as it's disabled by default
  rbac:
    create: true
  app:
    image:
      registry: repo.backbase.com/backbase-docker-releases
  chartName: local-k8s
  database:
    enabled: true
    host: mysql
    type: mysql
    checkEnabled: true
    existingSecret: mysql
    urlTemplate: "jdbc:mysql://{{.database.host}}:{{.database.port}}/{{.database.sid}}?useSSL=false"
  activemq:
    enabled: true
    host: activemq
    existingSecret: activemq
  jwt:
    enabled: true
    existingSecret: local-k8s-jwt
    SIG_SECRET_KEY_fromSecret: true
    EXTERNAL_SIG_SECRET_KEY_fromSecret: true
    EXTERNAL_ENC_SECRET_KEY_fromSecret: true
    USERCTX_KEY_fromSecret: true
  registry:
    enabled: false

backbase-env:
  fullnameOverride: local-k8s
  activemq:
    enabled: true
    fullnameOverride: activemq
  mysql:
    enabled: true
    mysqlRootPassword: backbase321!
    mysqlPassword: backbase123
    fullnameOverride: mysql
  jwt:
    enabled: true
    internalSecretKey: "JWTSecretKeyDontUseInProduction!"
    externalSecretKey: "JWTSecretKeyDontUseInProduction!"
    externalEncSecretKey: "JWTEncKeyDontUseInProduction666!"
    userctxKey: "JWTSecretKeyDontUseInProduction!"

ips-edge:
  edge:
    env:
      GATEWAY_ACTUATOR_USER: "admin"
      GATEWAY_ACTUATOR_PASSWORD: "admin"
    app:
      image:
        repository: edge
        tagFrom: ipsVersion
    ingress:
      enabled: true
      annotations:
        "kubernetes.io/ingress.class": "nginx"
        "nginx.ingress.kubernetes.io/proxy-body-size": "100m"
        "nginx.ingress.kubernetes.io/ssl-redirect": "false"
      hosts:
        - host: "kubernetes.docker.internal"
          paths:
            - /

identity:
  backbaseidentity:
    database:
      sid: "backbase_identity"
    env:
      "quarkus.datasource.jdbc.transaction-isolation-level": "2"
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KEYCLOAK_PASSWORD: "admin"
      KEYCLOAK_USER: "admin"
      QUARKUS_HTTP_CORS_ORIGINS: "http://kubernetes.docker.internal"
      KEYCLOAK_BACKBASE_SESSION_LIMIT_DEFAULT_STRATEGY: 'FIFO'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_NAME: 'backbase'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_CLIENTS_SESSIONLIMITDIRECTGRANT_NAME: 'session-limit-direct-grant'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_CLIENTS_SESSIONLIMITDIRECTGRANT_STRATEGY: 'FIFO'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_CLIENTS_SESSIONLIMITDIRECTGRANT_LIMIT: '2'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_CLIENTS_SESSIONLIMITWEB_NAME: 'session-limit-web'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_CLIENTS_SESSIONLIMITWEB_STRATEGY: 'FIFO'
      KEYCLOAK_BACKBASE_SESSION_LIMIT_REALMS_BACKBASE_CLIENTS_SESSIONLIMITWEB_LIMIT: '3'
      JAVA_TOOL_OPTIONS: "-Dkeycloak.migration.action=import -Dkeycloak.profile.feature.upload_scripts=enabled"
      KEYCLOAK_BACKBASE_OIDC_TOKEN_CONVERTER_URL: "http://token-converter:8080"
    volumeMounts:
      - mountPath: /tmp/keycloak-export/
        name: config
    volumes:
      - name: config
        configMap:
          name: identity-configmap
          items:
            - key: backbase-realm.json
              path: backbase-realm.json
            - key: backbase-users-0.json
              path: backbase-users-0.json
    app:
      name: backbaseidentity
      image:
        repository: backbase-identity
        tagFrom: identityVersion
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: http
        - name: infinispan
          port: 7800
          protocol: TCP
    service:
      enabled: true
      nameOverride: backbaseidentity
      additionalPorts:
        - name: infinispan
          port: 7800
          protocol: TCP
          targetPort: infinispan
    ingress:
      enabled: true
      annotations:
        "kubernetes.io/ingress.class": "nginx"
        "nginx.ingress.kubernetes.io/proxy-read-timeout": "600"
        "nginx.ingress.kubernetes.io/proxy-buffer-size": "16k"
        "nginx.ingress.kubernetes.io/ssl-redirect": "false"
        #"nginx.ingress.kubernetes.io/use-regex": "true"
      hosts:
        - host: "identity.docker.internal"
          paths:
            - /
  oidctokenconverter:
    enabled: true
    env:
      BACKBASE_TOKENCONVERTER_CLAIMVALUEVALIDATION_ENABLED: "true"
      BACKBASE_TOKENCONVERTER_VERIFYONLYNOINTERNALTOKEN: "true"
      BACKBASE_OIDCTOKENCONVERTER_FORCEJWKSVERIFICATIONGIVENMATCHINGCLAIMS: "true"
      BACKBASE_TOKENCONVERTER_CLAIMVALUEVALIDATION_CLAIMDENYENTRIES_0_CLAIMNAME: "acr"
      BACKBASE_TOKENCONVERTER_CLAIMVALUEVALIDATION_CLAIMDENYENTRIES_0_CLAIMVALUES: "bb:deny"
      BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_0_ISSUERHOST: "backbaseidentity"
      BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_0_INTERNALHOST: "backbaseidentity:8080"
      BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_1_ISSUERHOST: "identity.docker.internal"
      BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_1_INTERNALHOST: "backbaseidentity:8080"
      BACKBASE_OIDCTOKENCONVERTER_USERINFOVERIFICATION: "true"
      BACKBASE_TOKENCONVERTER_CLAIMSMAPPING_0_EXTERNAL: "userinfo_external_claim"
      BACKBASE_TOKENCONVERTER_CLAIMSMAPPING_0_INTERNAL: "userinfo_internal_claim"
      BACKBASE_TOKENCONVERTER_CLAIMSMAPPING_0_REQUIRED: "false"
      BACKBASE_TOKENCONVERTER_CLAIMSMAPPING_1_EXTERNAL: "tid"
      BACKBASE_TOKENCONVERTER_CLAIMSMAPPING_1_INTERNAL: "tid"
      BACKBASE_TOKENCONVERTER_CLAIMSMAPPING_1_REQUIRED: "false"
      SPRING_AUTOCONFIGURE_EXCLUDE: "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration"
    app:
      name: oidctokenconverter
      image:
        repository: oidc-token-converter-service
        tagFrom: identityVersion
  identityintegrationservice:
    enabled: false
  fidoservice:
    enabled: false
  devicemanagementservice:
    enabled: false
  confirmation:
    enabled: false
  transactionsigningmock:
    enabled: false
  hardtokenoutboundintegrationmock:
    enabled: false
  communicationsoutboundintegrationmock:
    enabled: false

cxs:
  auditing:
    enabled: false

  contentservices:
    enabled: true
    app:
      name: contentservices
      image:
        repository: contentservices
        tagFrom: cxVersion
      resources:
        memory:
          ram: 1024
        cpu:
          minShares: 100
          maxShares: 2000
    database:
      sid: cx6_contentservices

  portal:
    enabled: true
    app:
      name: portal
      image:
        repository: portal
        tagFrom: cxVersion
      resources:
        memory:
          ram: 1024
        cpu:
          minShares: 100
          maxShares: 2000
    database:
      sid: cx6_portal
    service:
      enabled: true
      nameOverride: portal
    env:
      PORTAL_RESOURCELOCATION_PROFILE: "filesystem"
      PORTAL_RESOURCELOCATION_PATH: "/tmp"
      # For Portal hibernate dialect is a required property for starting up:
      #
      # - mysql = org.hibernate.dialect.MySQL5Dialect
      # - sqlserver = org.hibernate.dialect.SQLServer2012Dialect
      # - oracle = org.hibernate.dialect.Oracle12cDialect
      #
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: "org.hibernate.dialect.MySQL5Dialect"
      SPRING_JPA_PROPERTIES_HIBERNATE_SESSIONFACTORYNAMEISJNDI: "false"
      #  Currently Portal image uses '/portal', will be aligned with other images
  #            SERVER_SERVLET_CONTEXT_PATH: "/"
  provisioning:
    enabled: true
    app:
      name: provisioning
      image:
        repository: provisioning
        tagFrom: cxVersion
      resources:
        memory:
          ram: 1024
        cpu:
          minShares: 100
          maxShares: 2000
    database:
      sid: cx6_provisioning

  pushintegrationservice:
    enabled: false
  renditionservice:
    enabled: false
  targeting:
    enabled: false
  thumbnailservice:
    enabled: false
  space-controller:
    enabled: false
  versionmanagementpersistenceservice:
    enabled: false

backbase-statics:
  image:
    registry: docker.io
    repository: torrespro/import-statics
    tag: latest
  job:
    imports:
      - repository: https://repo.backbase.com
        ## API KEY to access JFrog Artifactory repository
        ## For other repositories use own keys
        apikey:
        ## Username and password in case you don't want to use an API KEY to access JFrog Artifactory
        ## IMPORTANT! only 1 authentication method is required
        username: <yourRepoUsername>
        password: <yourRepoPassword>
        statics:
          - /backbase-6-release/com/backbase/tools/cx/cx6-import-tool-cli/6.2.10-b1/cx6-import-tool-cli-6.2.10-b1.jar
          - /backbase-6-release/com/backbase/cxp/editorial-collection/2.0.0-b340/editorial-collection-2.0.0-b340.zip
          - /expert-release-local/com/backbase/web-sdk/collection/collection-bb-web-sdk/1.14.0/collection-bb-web-sdk-1.14.0.zip
          - /backbase-6-release/com/backbase/cxp/experience-manager/2.0.0-b340/experience-manager-2.0.0-b340.zip
    target:
      context: http://edge:8080/api/provisioning
      auth-url: http://backbaseidentity:8080
      identity-scope: openid
      identity-grant-type: password
      identity-client-id: bb-tooling-client
      identity-realm: backbase
      username: admin
      password: admin
      retry-max-attempts: 1500
      retry-back-off-period: 5000

    check:
      enabled: true
      targets:
        - name: Provisioning
          url: http://edge:8080/api/provisioning/actuator/health
        - name: Portal
          url: http://edge:8080/api/portal/actuator/health
        - name: Contentservices
          url: http://edge:8080/api/contentservices/actuator/health
        - name: Identity
          url: http://backbaseidentity:8080/auth/realms/backbase/.well-known/openid-configuration
